services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: timeline-backend
    ports:
      - "5000:5000"
    volumes:
      - timeline-data:/app/data
      - timeline-uploads:/app/static/uploads
      - timeline-logs:/app/logs
    env_file:
      - .env.production
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:////app/data/timeline.db
      - PORT=5000
    restart: unless-stopped
    networks:
      - timeline-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.server
    container_name: timeline-frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx-http.conf:/etc/nginx/nginx.conf:ro
      - timeline-uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - timeline-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

networks:
  timeline-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  timeline-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  timeline-uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./static/uploads
  timeline-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
